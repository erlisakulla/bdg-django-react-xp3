# Generated by Django 3.2 on 2021-04-13 17:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('name', models.CharField(blank=True, max_length=150)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_instructor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_length', models.IntegerField()),
                ('distributorPresent', models.BooleanField()),
                ('wholesalerPresent', models.BooleanField()),
                ('active', models.BooleanField(default=True)),
                ('info_sharing', models.BooleanField(default=False)),
                ('info_delay', models.IntegerField(default=2)),
                ('holding_cost', models.FloatField(default=1)),
                ('backlog_cost', models.FloatField(default=1)),
                ('rounds_completed', models.IntegerField(default=0)),
                ('isDefaultGame', models.BooleanField(default=True)),
                ('starting_inventory', models.IntegerField(default=0)),
                ('instructor', models.ForeignKey(limit_choices_to={'is_instructor': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roleName', models.CharField(max_length=30)),
                ('ordered', models.BooleanField(default=False)),
                ('associatedGame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gameroles', to='api.game')),
                ('downstreamPlayer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role_downstreamPlayer', to='api.role')),
                ('playedBy', models.ForeignKey(blank=True, limit_choices_to={'is_instructor': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='playerrole', to=settings.AUTH_USER_MODEL)),
                ('upstreamPlayer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role_upstreamPlayer', to='api.role')),
            ],
            options={
                'unique_together': {('playedBy', 'associatedGame')},
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('inventory', models.IntegerField(default=0)),
                ('backlog', models.IntegerField(default=0)),
                ('demand', models.IntegerField(default=0)),
                ('incoming_shipment', models.IntegerField(default=0)),
                ('outgoing_shipment', models.IntegerField(default=0)),
                ('order_placed', models.IntegerField(blank=True, null=True)),
                ('cost', models.IntegerField()),
                ('associatedRole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roleweeks', to='api.role')),
            ],
        ),
    ]
